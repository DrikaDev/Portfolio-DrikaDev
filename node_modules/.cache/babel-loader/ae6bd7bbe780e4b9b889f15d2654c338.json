{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst utils_1 = require(\"./utils\");\n\nconst getSlideWidth = (count, wrapAround) => `${wrapAround ? 100 / (3 * count) : 100 / count}%`;\n\nconst getSlideStyles = (count, isCurrentSlide, isVisibleSlide, wrapAround, cellSpacing, animation, speed, zoomScale, adaptiveHeight, initializedAdaptiveHeight) => {\n  const width = getSlideWidth(count, wrapAround);\n  const visibleSlideOpacity = isVisibleSlide ? 1 : 0;\n  const animationSpeed = animation === 'fade' ? 200 : 500;\n  let height = 'auto';\n\n  if (adaptiveHeight) {\n    if (initializedAdaptiveHeight) {\n      // Once adaptiveHeight is initialized, the frame will size to the height\n      // of all the visible slides\n      height = '100%';\n    } else if (isVisibleSlide) {\n      // If the slide is visible but we're still measuring heights, have\n      // visible slides just take up their natural height\n      height = 'auto';\n    } else {\n      // If the slide is not visible and we're still measuring heights, the\n      // slide should have height 0 so it doesn't contribute to the measured\n      // height of the frame\n      height = '0';\n    }\n  }\n\n  return {\n    width,\n    flex: 1,\n    height,\n    padding: `0 ${cellSpacing ? cellSpacing / 2 : 0}px`,\n    transition: animation ? `${speed || animationSpeed}ms ease 0s` : undefined,\n    transform: animation === 'zoom' ? `scale(${isCurrentSlide && isVisibleSlide ? 1 : zoomScale || 0.85})` : undefined,\n    opacity: animation === 'fade' ? visibleSlideOpacity : 1\n  };\n};\n\nconst generateIndex = (index, count, typeOfSlide) => {\n  if (typeOfSlide === 'prev-cloned') {\n    return index - count;\n  }\n\n  if (typeOfSlide === 'next-cloned') {\n    return index + count;\n  }\n\n  return index;\n};\n\nconst Slide = _ref => {\n  let {\n    count,\n    children,\n    currentSlide,\n    index,\n    isCurrentSlide,\n    typeOfSlide,\n    wrapAround,\n    cellSpacing,\n    animation,\n    speed,\n    slidesToShow,\n    zoomScale,\n    cellAlign,\n    onVisibleSlideHeightChange,\n    adaptiveHeight,\n    initializedAdaptiveHeight\n  } = _ref;\n  const customIndex = wrapAround ? generateIndex(index, count, typeOfSlide) : index;\n  const isVisible = (0, utils_1.isSlideVisible)(currentSlide, customIndex, slidesToShow, cellAlign);\n  const slideRef = (0, react_1.useRef)(null);\n  const prevIsVisibleRef = (0, react_1.useRef)(false);\n  (0, react_1.useEffect)(() => {\n    var _a;\n\n    const node = slideRef.current;\n\n    if (node) {\n      const slideHeight = (_a = node.getBoundingClientRect()) === null || _a === void 0 ? void 0 : _a.height;\n\n      if (isVisible) {\n        node.removeAttribute('inert');\n      } else {\n        node.setAttribute('inert', 'true');\n      }\n\n      const prevIsVisible = prevIsVisibleRef.current;\n\n      if (isVisible && !prevIsVisible) {\n        onVisibleSlideHeightChange(customIndex, slideHeight);\n      } else if (!isVisible && prevIsVisible) {\n        onVisibleSlideHeightChange(customIndex, null);\n      }\n\n      prevIsVisibleRef.current = isVisible;\n    }\n  }, [adaptiveHeight, customIndex, isVisible, onVisibleSlideHeightChange, slidesToShow]);\n  const currentSlideClass = isCurrentSlide && isVisible ? ' slide-current' : '';\n  return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n    ref: slideRef,\n    className: `slide${currentSlideClass}${typeOfSlide ? ` ${typeOfSlide}` : ''}${isVisible ? ' slide-visible' : ''}`,\n    style: getSlideStyles(count, isCurrentSlide, isVisible, wrapAround, cellSpacing, animation, speed, zoomScale, adaptiveHeight, initializedAdaptiveHeight)\n  }, {\n    children: children\n  }));\n};\n\nexports.default = Slide;","map":{"version":3,"mappings":"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","names":["getSlideWidth","count","wrapAround","getSlideStyles","isCurrentSlide","isVisibleSlide","cellSpacing","animation","speed","zoomScale","adaptiveHeight","initializedAdaptiveHeight","width","visibleSlideOpacity","animationSpeed","height","flex","padding","transition","undefined","transform","opacity","generateIndex","index","typeOfSlide","Slide","children","currentSlide","slidesToShow","cellAlign","onVisibleSlideHeightChange","customIndex","isVisible","slideRef","prevIsVisibleRef","node","current","slideHeight","getBoundingClientRect","_a","removeAttribute","setAttribute","prevIsVisible","currentSlideClass","ref","className","style","exports"],"sources":["../src/slide.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}